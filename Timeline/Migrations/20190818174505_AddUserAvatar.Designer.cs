// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timeline.Entities;

namespace Timeline.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190818174505_AddUserAvatar")]
    partial class AddUserAvatar
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Timeline.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("AvatarId");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnName("password");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(26);

                    b.Property<string>("RoleString")
                        .IsRequired()
                        .HasColumnName("roles");

                    b.Property<long>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version")
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Timeline.Entities.UserAvatar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnName("data");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("user_avatars");
                });

            modelBuilder.Entity("Timeline.Entities.User", b =>
                {
                    b.HasOne("Timeline.Entities.UserAvatar", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");
                });
#pragma warning restore 612, 618
        }
    }
}
