trigger:
- master

pr: none

stages:
- stage: Build
  variables:
    buildConfiguration: 'Release'
    ASPNETCORE_ENVIRONMENT: 'Development'
  jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - script: |
        dotnet restore Timeline/Timeline.csproj --configfile nuget.config
        dotnet restore Timeline.Tests/Timeline.Tests.csproj --configfile nuget.config
      displayName: Dotnet Restore

    - script: dotnet test Timeline.Tests/Timeline.Tests.csproj --configuration $(buildConfiguration) --no-restore --logger trx
      displayName: Dotnet Test

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'

    - script: dotnet publish Timeline/Timeline.csproj --configuration $(buildConfiguration) --no-restore --output ./publish/
      displayName: Dotnet Publish

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'timeline'
        targetPath: Timeline/publish

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      name: 'Default'
    environment: 'timeline-server'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              rm -rf /var/timeline/*
              cp -r $PIPELINE_WORKSPACE/timeline/. /var/timeline/
              sudo systemctl restart timeline.service
            displayName: 'Command Line Script'
            failOnStderr: true
