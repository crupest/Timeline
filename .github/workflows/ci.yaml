name: Routine Build And Test

on:
  push:
    branches: [dev]
    paths-ignore:
      - "**/README.md"
  pull_request:
    branches: [dev]
    paths-ignore:
      - "**/README.md"

jobs:
  front-end:
    name: Front End Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Timeline/ClientApp
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            Timeline/ClientApp/.pnp.*
            Timeline/ClientApp/.yarn
            !Timeline/ClientApp/.yarn/releases
            !Timeline/ClientApp/.yarn/plugins
          key: yarn-${{ runner.os }}-${{ hashFiles('Timeline/ClientApp/yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-

      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      - name: Restore Packages
        run: yarn

      - name: Build App
        run: yarn build

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: front-end
          path: Timeline/ClientApp/dist/

  back-end:
    name: Back End Build And Test
    runs-on: ubuntu-latest
    env:
      ASPNETCORE_ENVIRONMENT: "Development"
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Use .Net Core 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: Build And Test
        run: dotnet test --logger html --collect:"XPlat Code Coverage" --settings './Timeline.Tests/coverletArgs.runsettings'

      - name: Upload Test Artifact
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: back-end-test
          path: Timeline.Tests/TestResults/
